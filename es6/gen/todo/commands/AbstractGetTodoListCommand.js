/********************************************************************************
 * generated by de.acegen 1.5.6
 ********************************************************************************/




import AsynchronousCommand from "../../ace/AsynchronousCommand";
import Event from "../../ace/Event";
import TriggerAction from "../../ace/TriggerAction";
import * as AppUtils from "../../../src/app/AppUtils";
import CalculateItemCountAction from "../../../src/todo/actions/CalculateItemCountAction";
import CreateCategoryAction from "../../../src/todo/actions/CreateCategoryAction";

export default class AbstractGetTodoListCommand extends AsynchronousCommand {
    constructor() {
        super("todo.GetTodoListCommand");
    }
    
    initCommandData(data) {
        data.categoryId = AppUtils.get(
        	["container", "footer", "categoryId"]
        );
        data.outcomes = [];
    }

	addOkOutcome(data) {
		data.outcomes.push("ok");
	}
	addCategoryDoesNotExistOutcome(data) {
		data.outcomes.push("categoryDoesNotExist");
	}

	execute(data) {
	    return new Promise((resolve, reject) => {
			AppUtils.httpGet(`${AppUtils.settings.rootPath}/todos/all?categoryId=${data.categoryId}`, data.uuid, false).then((response) => {
				data.todoList = response.todoList;
				this.handleResponse(data, resolve, reject);
			}, (error) => {
				data.error = error;
				this.handleError(data, resolve, reject);
			});
	    });
	}

    publishEvents(data) {
		if (data.outcomes.includes("ok")) {
			new Event('todo.GetTodoListOkEvent').publish(data);
			AppUtils.stateUpdated();
			new TriggerAction().publishWithDelay(
				new CalculateItemCountAction(), 
					{
					},
				100
			)
		}
		if (data.outcomes.includes("categoryDoesNotExist")) {
			new TriggerAction().publish(
				new CreateCategoryAction(), 
					{
					}
			)
		}
    }

}



/******* S.D.G. *******/



