/********************************************************************************
 * generated by de.acegen 1.3.0
 ********************************************************************************/




import AsynchronousCommand from "../../../gen/ace/AsynchronousCommand";
import TriggerAction from "../../../gen/ace/TriggerAction";
import * as Utils from "../../ace/Utils";
import * as AppUtils from "../../../src/app/AppUtils";
import * as AppState from "../../ace/AppState";
import GetTodoListWithoutCategoryCheckAction from "../../../src/todo/actions/GetTodoListWithoutCategoryCheckAction";

export default class AbstractCreateCategoryCommand extends AsynchronousCommand {
    constructor() {
        super("todo.CreateCategoryCommand");
    }
    
    initCommandData(data) {
        data.categoryId = AppState.get_container_footer_categoryId();
        data.outcomes = [];
    }

	addOkOutcome(data) {
		data.outcomes.push("ok");
	}

	execute(data) {
	    return new Promise((resolve, reject) => {
	    	let payload = {
	    		categoryId : data.categoryId
	    	};
			AppUtils.httpPost(`${Utils.settings.rootPath}/category/create`, data.uuid, false, payload).then(() => {
				this.handleResponse(data, resolve, reject);
			}, (error) => {
				data.error = error;
				this.handleError(data, resolve, reject);
			});
	    });
	}

    publishEvents(data) {
		if (data.outcomes.includes("ok")) {
			new TriggerAction().publish(
				new GetTodoListWithoutCategoryCheckAction(), 
				{}
			)
		}
    }

}



/******* S.D.G. *******/



