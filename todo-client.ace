HttpClient

todo 





ACE 
	Init(hash)
		on ok (
			set container.filter 
			set container.footer.categoryId
			set container.newTodoInput.newTodo
		) triggers (GetTodoList)
	
	CreateCategory
		fromAppState(container.footer.categoryId)
			call com.anfelisa.todo.CreateCategory
			loadingFlag container.spinner.loading 
		on ok triggers ( GetTodoListWithoutCategoryCheck )
	
	GetTodoList 
		fromAppState(container.footer.categoryId)
			call com.anfelisa.todo.GetAllTodos  
			loadingFlag container.spinner.loading 
		on ok (
			set container.todos.todoList
		) triggers ( delayInMillis 100 CalculateItemCount) 
		on categoryDoesNotExist triggers (CreateCategory)
	
	GetTodoListWithoutCategoryCheck 
		fromAppState(container.footer.categoryId)
			call com.anfelisa.todo.GetAllTodos  
			loadingFlag container.spinner.loading 
		on ok (
			set container.todos.todoList
		) triggers (CalculateItemCount)
	
	NewTodoChanged (newTodo)
		on ok (set container.newTodoInput.newTodo)
	
	NewTodoKeyPressed (keyCode)
		on enter triggers ( CreateTodo )
		on esc (set container.newTodoInput.newTodo)
		on notEnter
	
	CreateTodo
		fromAppState(container.newTodoInput.newTodo as description, container.footer.categoryId)
			call com.anfelisa.todo.CreateTodo
			loadingFlag container.spinner.loading 
		on ok (set container.newTodoInput.newTodo) triggers ( GetTodoList)
		on empty
		
	EditTodo (id)
		fromAppState ( container.todos.todoList )
		on ok ( 
			set container.todos.editedDescription 
			set container.todos.editedTodoId 
		)
	
	EditedTodoChanged (editedDescription)
		on ok ( set container.todos.editedDescription)
	
	EditedTodoKeyPressed (keyCode)
		on enter triggers ( UpdateTodo )
		on esc (
			set container.todos.editedDescription 
			set container.todos.editedTodoId 
		) 
		on notEnter
	
	UpdateTodo
		fromAppState ( 
			container.todos.editedTodoId as id, 
			container.todos.editedDescription as description
		)
			call com.anfelisa.todo.UpdateTodo
			loadingFlag container.spinner.loading 
		on ok (
			set container.todos.editedDescription 
			set container.todos.editedTodoId 
		) triggers (GetTodoList)
		on empty (
			set container.todos.editedDescription 
			set container.todos.editedTodoId 
		)
		




	CalculateItemCount
		fromAppState (container.todos.todoList)
		on ok (
			set container.footer.itemCount
		)
	
	ToggleTodo (id)
			call com.anfelisa.todo.ToggleTodo
			loadingFlag container.spinner.loading 
		on ok triggers (GetTodoList)
	
	ToggleAll 
		fromAppState(container.footer.categoryId)
			call com.anfelisa.todo.ToggleAll 
			loadingFlag container.spinner.loading 
		on ok triggers (GetTodoList)
	
	DeleteTodo (id)
			call com.anfelisa.todo.DeleteTodo 
			loadingFlag container.spinner.loading 
		on ok triggers (GetTodoList)
	
	ClearDone
		fromAppState(container.footer.categoryId) 
			call com.anfelisa.todo.ClearDone 
			loadingFlag container.spinner.loading 
		on ok triggers (GetTodoList)
		



ui JSX container {
	footer {
		categoryId
		itemCount
	}
	filter
	newTodoInput {
		newTodo
	}
	spinner {
		loading
	}
	todos {
		List todoList {
			categoryId
			id
			description
			done
			createdDateTime
			updatedDateTime
		}
		editedDescription
		editedTodoId
	}
}
