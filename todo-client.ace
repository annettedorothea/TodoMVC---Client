HttpClient

todo 


ACE 
	Init
		fromAppState(
			container.footer.filter.categoryId,
			container.footer.filter.value
		)
		on ok (
			set container.header.newTodo
			set container.main.toggleAll.checked
		) triggers (GetTodoList)
	
	CreateCategory
		fromAppState(container.footer.filter.categoryId)
			call com.anfelisa.todo.CreateCategory
			set loading container.header.heading.spinner.display 
		on ok triggers ( GetTodoListWithoutCategoryCheck )
	
	GetTodoList 
		fromAppState(
			container.footer.filter.categoryId,
			container.footer.filter.value as filter,
			container.todos.todoList as lastTodoList
		)
			call com.anfelisa.todo.GetAllTodos  
			set loading container.header.heading.spinner.display 
		on ok (
			set container.todos.todoList
			set container.main.toggleAll.checked
			set container.footer.itemCount
		)
		on categoryDoesNotExist triggers (CreateCategory)
	
	GetTodoListWithoutCategoryCheck 
		fromAppState(
			container.footer.filter.categoryId,
			container.footer.filter.value as filter,
			container.todos.todoList as lastTodoList
		)
			call com.anfelisa.todo.GetAllTodos  
			set loading container.header.heading.spinner.display 
		on ok (
			set container.todos.todoList
			set container.main.toggleAll.checked
			set container.footer.itemCount
		)
	
	NewTodoChanged (value)
		on ok (set container.header.newTodo.value)
	
	NewTodoKeyPressed (keyCode)
		on enter triggers ( CreateTodo )
		on esc (set container.header.newTodo.value)
		on notEnter
	
	CreateTodo
		fromAppState(container.header.newTodo.value as description, container.footer.filter.categoryId)
			call com.anfelisa.todo.CreateTodo
			set loading container.header.heading.spinner.display 
		on ok (set container.header.newTodo.value) triggers ( GetTodoList)
		on empty
		
	EditTodo (id)
		fromAppState ( container.todos.todoList )
		on ok ( 
			set container.todos.todoList 
		)
	
	EditedTodoChanged (value, id)
		fromAppState ( container.todos.todoList )
		on ok ( set container.todos.todoList )
	
	EditedTodoKeyPressed (keyCode, id)
		fromAppState ( container.todos.todoList )
		on enter (
			set container.todos.todoList  
		) triggers ( UpdateTodo )
		on esc (
			set container.todos.todoList  
		) 
		on notEnter
	
	UpdateTodo (id)
		fromAppState ( container.todos.todoList )
			call com.anfelisa.todo.UpdateTodo
			set loading container.header.heading.spinner.display 
		on ok triggers (GetTodoList)
		on empty (
			set container.todos.todoList 
		)
		
	ToggleTodo (id)
			call com.anfelisa.todo.ToggleTodo
			set loading container.header.heading.spinner.display 
		on ok triggers (GetTodoList)
	
	ToggleAll 
		fromAppState(container.footer.filter.categoryId)
			call com.anfelisa.todo.ToggleAll 
			set loading container.header.heading.spinner.display 
		on ok triggers (GetTodoList)
	
	DeleteTodo (id)
			call com.anfelisa.todo.DeleteTodo 
			set loading container.header.heading.spinner.display 
		on ok triggers (GetTodoList)
	
	ClearDone
		fromAppState(container.footer.filter.categoryId) 
			call com.anfelisa.todo.ClearDone 
			set loading container.header.heading.spinner.display 
		on ok triggers (GetTodoList)
		
	ChangeFilter (value)
		on ok (set container.footer.filter.value)


ui JSX container {
	header {
		heading {
			spinner {
				display
			}
		}
		newTodo TextInput {
			value
			actions {
				"onChange" NewTodoChanged
				"onKeyUp" NewTodoKeyPressed
			}
		}
	}
	main {
		toggleAll CheckBox {
			checked
			actions {
				"onChange" ToggleAll
			}
		}
	}
	todos {
		List todoList {
			categoryId
			id
			description
			readOnly
			done
			doneCheckbox CheckBox {
				done
				id
				actions {
					"onChange" ToggleTodo
				}
			}
			descriptionInput TextInput {
				description
				editedDescription
				readOnly
				id
				actions {
					"onChange" EditedTodoChanged
					"onKeyUp" EditedTodoKeyPressed
					"onDoubleClick" EditTodo
				}
			}
			deleteTodo Button {
				id
				actions {
					"onClick" DeleteTodo
				}
			}
		}
	}
	footer {
		itemCount
		filter Select {
			value location
			categoryId location
			options "all" "open" "done"
			actions {
				"onChange" ChangeFilter
			}
		}
		clearDone Button {
			actions {
				"onClick" ClearDone
			}
		}
	}
	hash location
}
