HttpClient 

toggletodo

scenarios 

	ToggleTodo
		GIVEN 
			newtodokeypressed.CreateSecondTodo
		WHEN
			todo.ToggleTodo(id : "${testId}")
		THEN
			expectedState 
				todoWasSetToDone todo.container.todos.todoList should be [
					{
						description: "1st Item ${testId}",
						descriptionInput: { 
							editedDescription: '1st Item ${testId}'
						},
						done: true,
						id: "${testId}",
						readOnly: true
					},
					{
						description: "2nd Item ${testId}",
						descriptionInput: { 
							editedDescription: '2nd Item ${testId}'
						},
						done: false,
						id: "${testId}_2",
						readOnly: true
					}
				]
	
	ToggleTodoFlow
		GIVEN 
			newtodokeypressed.CreateSecondTodo
		WHEN
			todo.ToggleTodo(id : "${testId}")
		THEN
			expectedState 
				todoWasSetToDone todo.container.todos.todoList should be [
					{
						description: "1st Item ${testId}",
						descriptionInput: { 
							editedDescription: '1st Item ${testId}'
						},
						done: true,
						id: "${testId}",
						readOnly: true
					},
					{
						description: "2nd Item ${testId}",
						descriptionInput: { 
							editedDescription: '2nd Item ${testId}'
						},
						done: false,
						id: "${testId}_2",
						readOnly: true
					}
				]
		AND WHEN
			todo.ToggleTodo(id : "${testId}")
		THEN
			expectedState 
				todoWasSetToOpen todo.container.todos.todoList should be [
					{
						description: "1st Item ${testId}",
						descriptionInput: { 
							editedDescription: '1st Item ${testId}'
						},
						done: false,
						id: "${testId}",
						readOnly: true
					},
					{
						description: "2nd Item ${testId}",
						descriptionInput: { 
							editedDescription: '2nd Item ${testId}'
						},
						done: false,
						id: "${testId}_2",
						readOnly: true
					}
				]
				
				
				
				