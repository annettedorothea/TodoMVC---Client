/********************************************************************************
 * generated by de.acegen 1.0.2
 ********************************************************************************/


import * as ActionIds from "../gen/todo/TodoActionIds"
import * as TodoActionIds from "../gen/todo/TodoActionIds";

export function getCypressFor(action, args) {
    if (ActionIds.init === action) {
        return cy.visit(`http://127.0.0.1:9999/${args[0]}`)
    }
    if (ActionIds.newTodoChanged === action) {
        return cy.get('#newTodoInput').type(args[0])
    }
    if (ActionIds.newTodoKeyPressed === action) {
        return cy.get('#newTodoInput').type(String.fromCharCode(args[0]))
    }
    if (TodoActionIds.toggleTodo === action) {
        return cy.get(`#${args[0]}`).click()
    }
    if (TodoActionIds.deleteTodo === action) {
        return cy.get(`#delete_${args[0]}`).click({force: true})
    }
    if (TodoActionIds.toggleAll === action) {
        return cy.get(".toggle-all").click()
    }
    if (TodoActionIds.clearDone === action) {
        return cy.get(".clear-completed").click()
    }
    if (TodoActionIds.editTodo === action) {
        return cy.get(".todo-list").find(`#${args[0]}`).parent().parent().dblclick()
    }
    if (TodoActionIds.editedTodoChanged === action) {
        return cy.get('.edit').clear().type(args[0])
    }
    if (TodoActionIds.editedTodoKeyPressed === action) {
        return cy.get('.edit').type(String.fromCharCode(args[0]))
    }
}

export function wait(numberOfSyncCalls, numberOfAsyncCalls) {
    return cy.wait(numberOfSyncCalls * 1 + numberOfAsyncCalls * 50)
}

export function testId() {
    let d = new Date().getTime();
    return 'xxxxxxxx'.replace(/[xy]/g, function (c) {
        let r = (d + Math.random() * 16) % 16 | 0;
        d = Math.floor(d / 16);
        return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);
    });
}


/******* S.D.G. *******/




